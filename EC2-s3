provider "aws" {
  region = "us-east-1"
}

resource "aws_instance" "ec2_machine" {
  ami           = "ami-0953476d60561c955"
  instance_type = "t2.micro"

  tags = {
    Name = "Terra EC2"
  }
}

#terraform init
#terraform plan
#terraform apply

complete with EC2 and S3
provider "aws" {
  region = "us-east-1"
}

resource "aws_instance" "ec2_machine" {
  ami           = "ami-0953476d60561c955"
  instance_type = "t2.micro"

  tags = {
    Name = "Terra EC2"
  }
}

resource "random_id" "bucket_id" {
  byte_length = 4
}

resource "aws_s3_bucket" "demo_bucket" {
  bucket = "sandhya-upload-demo-2025-${random_id.bucket_id.hex}"

  tags = {
    Name = "upload-demo"
  }
}

resource "aws_s3_object" "text_file" {
  bucket  = aws_s3_bucket.demo_bucket.id
  key     = "sample.txt"
  source  = "./sample.txt"
  acl     = "private"
}


//
provider "aws" {
  region = "us-west-2"
}

resource "aws_security_group" "web_sg" {
  name        = "web_sg"
  description = "Allow HTTP inbound traffic"

  ingress {
    description = "HTTP"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_instance" "web_server" {
  ami           = "ami-07b0c09aab6e66ee9"
  instance_type = "t2.micro"

  vpc_security_group_ids = [aws_security_group.web_sg.id]

  user_data = <<-EOF
              #!/bin/bash
              yum update -y
              yum install -y httpd
              systemctl start httpd
              systemctl enable httpd
              echo "<h1>Deployed via Terraform</h1>" > /var/www/html/index.html
              EOF

  tags = {
    Name = "TerraformWebServer"
  }
}
output "instance_ip" {
  value = aws_instance.web_server.public_ip
}

